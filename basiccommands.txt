ls
ls -l
cd
cat
git add .
git commit -m"comment here"
git push
git pull
git status
mv <file/directory> <existing file/directory> (move file/directory to)
mv <file/directory> <nonexisting file/directory> (copy and rename)
sudo
sudo -s (lets you sudo all commands without typing sudo everytime. [Administrator Priveleges])
sudo reboot
sudo shutdown
apt-get
mkdir
rmdir
g++ 
g++ -c
g++ -s -O2
emacs
nano
vim
./ 
cd .. 
cd ~   (go to home directory)
cd -   (go to the last directory you were just in)
make
env
kill
git clone
git checkout -b iss53
touch       (creates a file)
locate      (finds a file)
rm
pwd
sudo apt-get update
<<<<<<< HEAD
tail
=======
ls -la
>>>>>>> 628560996da0b6443167724ee23ef547f9f01d43
which (finds the location of the executables)
man (used before a command to show information about that command)
clear (wipes the board clean)
cp
df (show disk usage)
ifconfig //lets you find the MAC address for your Rasberry PI
sudo apt install <package name>
sudo apt remove <package name>
<package / program> --version       gives the version of the package or program installed
g++ <file name> -o <output file name>       name the output of a compilation
exit
echo [options] [strings]
du      gives the disk usage of a file in your system
help 	shows list of commands. (Can do [command] -help to get desc. of command and its format)
cat <file(s)> | grep <word fragment you are searching for>      use this in directory to search files for words/word fragments
grep -e <word/word fragment> <file(s)>                 does the same as the above command except it tells you which file                    
                                                        everything is from
grep -w <word> <file(s)>                        searches the files for the complete word 
ld     combines object files, archives, and import files into one output object file
chmod   //change access permissions for a file
cp <source> <dest>
---------
Command:      cat $filename1 $filename2 > $filename3

Description:  Creates new file (filename3) with combined output. Overwrites any existing content with same filename

Command:      cat $filename1 $filename2 >> $filename3

Description:  Appends (Adds to end of it) to previous contents of file. 

Command:      find $location -name "poem*"

Description:  This is the find utility. It allows you to look for files and directories. 
The utility is simple to remember but the arguments are hard to remember. The first argument is the pathname. 
The second argument refers to what you are referring to. The -name example is what you are looking for and can be either -size,
-date, -owner, and other things. The third argument indicates a part of what you are looking for.

Command:      grep $ID  $filename

Description: This allows you to find patterns in data. The first argument asks "What are you looking for?".
The second argument asks "Where are you looking?"
-----------
